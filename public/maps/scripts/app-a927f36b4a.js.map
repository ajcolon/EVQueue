{"version":3,"sources":["scripts/app-a927f36b4a.js"],"names":["angular","module","LoginService","user","this","logUser","username","getUser","service","LoginController","$log","$state","vm","log","go","controller","$inject","QueueService","$http","$q","API","getQueue","getQueueSuccess","response","data","getQueueFailed","error","reject","get","then","getTestQueue","joinQueue","joinQueueSuccess","joinQueueFailed","post","factory","MainController","$timeoutnpm","queue","userIsQueued","$timeout","runBlock","debug","run","constant","config","$logProvider","$stateProvider","$urlRouterProvider","debugEnabled","otherwise","state","url","templateUrl","controllerAs","$templateCache","put"],"mappings":"CAAA,WACE,YAEAA,SACGC,OAAO,WAAY,YAAa,YAAa,UAAW,aAAc,aAAc,SAAU,eAAe,iBAGlH,WACI,YAOA,SAASC,KACL,GAAIC,GAAO,IACXC,MAAKC,QAAU,SAASC,GACpBH,EAAOG,GAEXF,KAAKG,QAAU,WACX,MAAOJ,IAXfH,QACKC,OAAO,WACPO,QAAQ,eAAgBN,MAejC,WACI,YAOA,SAASO,GAAgBC,EAAKR,EAAaS,GACvC,GAAIC,GAAKR,IACTQ,GAAGT,KAAO,KACVS,EAAGP,QAAU,WACTK,EAAKG,IAAI,QACTX,EAAaG,QAAQO,EAAGT,MACxBQ,EAAOG,GAAG,UAXlBd,QACKC,OAAO,WACPc,WAAW,kBAAmBN,GAanCA,EAAgBO,SAAW,OAAQ,eAAgB,aAEvD,WACI,YAOA,SAASC,GAAaC,EAAOR,EAAMS,EAAGC,GAQlC,QAASC,KAKL,QAASC,GAAgBC,GACrB,MAAOA,GAASC,KAGpB,QAASC,GAAeC,GAEpB,MADAhB,GAAKgB,MAAM,2BAA6BA,EAAMF,MACvCL,EAAGQ,OAAOD,GAVrB,MAAOR,GAAMU,IAAIR,GACZS,KAAKP,GACL,SAASG,GAYlB,QAASK,KACL,QAASxB,SAAW,SAASA,SAAW,SAG5C,QAASyB,KAKL,QAASC,GAAiBT,GACtB,MAAOA,GAASC,KAGpB,QAASS,GAAgBP,GAErB,MADAhB,GAAKgB,MAAM,2BAA6BA,EAAMF,MACvCL,EAAGQ,OAAOD,GAVrB,MAAOR,GAAMgB,KAAKd,GACbS,KAAKG,GACL,SAASC,GA5BlB,OACIZ,SAAUA,EACVU,UAAUA,EACVD,aAAaA,GAVrB9B,QACKC,OAAO,WACPkC,QAAQ,eAAgBlB,GA8C7BA,EAAaD,SAAW,QAAS,OAAQ,KAAM,UAEnD,WACI,YAOA,SAASoB,GAAe1B,EAAKO,EAAaoB,GACtC,GAAIzB,GAAKR,IACTM,GAAKG,IAAI,wBACTD,EAAGT,KAAO,KAEVS,EAAGS,SAAW,WACVT,EAAG0B,MAAQrB,EAAaa,gBAG5BlB,EAAG2B,cAAe,EAElB3B,EAAGmB,UAAY,WACXnB,EAAG2B,cAAe,EAClBtB,EAAac,UAAUnB,EAAGT,MAC1BS,EAAGS,YAGPmB,SAAS,WACL5B,EAAGS,YACL,KAEFT,EAAGS,WA1BPrB,QACKC,OAAO,WACPc,WAAW,kBAAmBqB,GA4BnCA,EAAepB,SAAW,OAAQ,eAAgB,kBAAtD,WACE,YAOA,SAASyB,GAAS/B,GAEhBA,EAAKgC,MAAM,gBAPb1C,QACGC,OAAO,WACP0C,IAAIF,GAUPA,EAASzB,SAAW,WAAtB,WACE,YAEAhB,SACGC,OAAO,WACP2C,SAAS,UAAW,WACpBA,SAAS,MAAO,YAIrB,WACI,YAOA,SAASC,GAAOC,EAAcC,EAAeC,GAEzCF,EAAaG,cAAa,GAE1BD,EAAmBE,UAAU,UAE7BH,EACKI,MAAM,SACHC,IAAK,SACLC,YAAa,uBACbtC,WAAY,kBACZuC,aAAc,OAEjBH,MAAM,SACHC,IAAK,SACLC,YAAa,uBACbtC,WAAY,kBACZuC,aAAc,OAtB1BtD,QACKC,OAAO,WACP4C,OAAOA,GA2BZA,EAAO7B,SAAW,eAAgB,iBAAkB,yBADxDhB,QAAQC,OAAO,WAAW0C,KAAK,iBAAkB,SAASY,GAAiBA,EAAeC,IAAI,uBAAuB,sRACrHD,EAAeC,IAAI,uBAAuB","file":"scripts/app-a927f36b4a.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('EVQueue', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ui.bootstrap','ui.router']);\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('EVQueue')\n        .service('LoginService', LoginService);\n\n\n    function LoginService() {\n        var user = null;\n        this.logUser = function(username){\n            user = username;\n        };\n        this.getUser = function(){\n            return user;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('EVQueue')\n        .controller('LoginController', LoginController);\n\n    /** @ngInject */\n    function LoginController($log,LoginService,$state) {\n        var vm = this;\n        vm.user = null;\n        vm.logUser = function(){\n            $log.log(\"user\");\n            LoginService.logUser(vm.user);\n            $state.go(\"queue\");\n        };\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('EVQueue')\n        .factory('QueueService', QueueService);\n\n\n    function QueueService($http, $log, $q,API) {\n\n        return {\n            getQueue: getQueue,\n            joinQueue:joinQueue,\n            getTestQueue:getTestQueue\n        };\n\n        function getQueue() {\n            return $http.get(API)\n                .then(getQueueSuccess)\n                ['catch'](getQueueFailed);\n\n            function getQueueSuccess(response) {\n                return response.data;\n            }\n\n            function getQueueFailed(error) {\n                $log.error('XHR Failed for getQueue.' + error.data);\n                return $q.reject(error);\n            }\n        }\n\n        function getTestQueue() {\n            return [{\"username\":\"Joel\"},{\"username\":\"Test\"}];\n        }\n\n        function joinQueue() {\n            return $http.post(API)\n                .then(joinQueueSuccess)\n                ['catch'](joinQueueFailed);\n\n            function joinQueueSuccess(response) {\n                return response.data;\n            }\n\n            function joinQueueFailed(error) {\n                $log.error('XHR Failed for getQueue.' + error.data);\n                return $q.reject(error);\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('EVQueue')\n        .controller('QueueController', MainController);\n\n    /** @ngInject */\n    function MainController($log,QueueService,$timeoutnpm) {\n        var vm = this;\n        $log.log(\"QueueController Init\");\n        vm.user = null;\n\n        vm.getQueue = function(){\n            vm.queue = QueueService.getTestQueue();\n        };\n\n        vm.userIsQueued = false;\n\n        vm.joinQueue = function(){\n            vm.userIsQueued = true;\n            QueueService.joinQueue(vm.user);\n            vm.getQueue();\n        };\n\n        $timeout(function(){\n            vm.getQueue();\n        },30000);\n\n        vm.getQueue();\n    }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('EVQueue')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('EVQueue')\n    .constant('AppName', 'EVQueue')\n    .constant('API', '/api/');\n\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('EVQueue')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider, $stateProvider,$urlRouterProvider) {\n        // Enable log\n        $logProvider.debugEnabled(true);\n\n        $urlRouterProvider.otherwise('/queue');\n\n        $stateProvider\n            .state('login', {\n                url: '/login',\n                templateUrl: 'app/login/login.html',\n                controller: 'LoginController',\n                controllerAs: 'vm'\n            })\n            .state('queue', {\n                url: '/queue',\n                templateUrl: 'app/queue/queue.html',\n                controller: 'QueueController',\n                controllerAs: 'vm'\n            });\n    }\n\n})();\n\nangular.module(\"EVQueue\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/login/login.html\",\"<div class=\\\"row marketing\\\"><form><div class=\\\"form-group\\\"><label for=\\\"username\\\">Username</label> <input type=\\\"text\\\" ng-model=\\\"vm.user\\\" id=\\\"username\\\" placeholder=\\\"username\\\"></div><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.logUser()\\\">Login</button></form></div>\");\n$templateCache.put(\"app/queue/queue.html\",\"<div class=\\\"queue-view\\\"><div class=\\\"head-container\\\"><div class=\\\"container\\\"><div class=\\\"header\\\">EVQueue</div><div class=\\\"subhead\\\">Financial Engines</div><p>Simple utility app to keep track of the EV Cars queue. Go ahead and set your username and join the queue from your computer / phone whenever.</p><input placeholder=\\\"Username\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"usr\\\"> <button type=\\\"button\\\" class=\\\"btn btn-head\\\" ng-disabled=\\\"vm.userIsQueued\\\" ng-click=\\\"vm.joinQueue()\\\">Join Queue</button></div></div><div class=\\\"row item\\\" ng-repeat=\\\"q in vm.queue\\\"><div ng-bind=\\\"q.username\\\"></div></div></div>\");}]);"],"sourceRoot":"/source/"}