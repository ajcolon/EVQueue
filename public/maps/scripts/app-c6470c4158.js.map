{"version":3,"sources":["scripts/app-c6470c4158.js"],"names":["angular","module","LoginService","user","this","logUser","username","getUser","service","LoginController","$log","$state","vm","log","go","controller","$inject","QueueService","$http","$q","API","getQueue","getQueueSuccess","response","data","getQueueFailed","error","reject","get","then","getTestQueue","unplugged","uuid","plugged","joinQueue","joinQueueSuccess","joinQueueFailed","post","removeQueue","uid","removeQueueSuccess","removeQueueFailed","factory","MainController","$interval","isCollapsed","queue","userIsQueued","chargingStates","currChargingIndex","currentChargingClass","length","removeFromQueue","runBlock","debug","run","constant","config","$logProvider","$stateProvider","$urlRouterProvider","debugEnabled","otherwise","state","url","templateUrl","controllerAs","$templateCache","put"],"mappings":"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","file":"scripts/app-c6470c4158.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('EVQueue', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ui.bootstrap','ui.router']);\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('EVQueue')\n        .service('LoginService', LoginService);\n\n\n    function LoginService() {\n        var user = null;\n        this.logUser = function(username){\n            user = username;\n        };\n        this.getUser = function(){\n            return user;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('EVQueue')\n        .controller('LoginController', LoginController);\n\n    /** @ngInject */\n    function LoginController($log,LoginService,$state) {\n        var vm = this;\n        vm.user = null;\n        vm.logUser = function(){\n            $log.log(\"user\");\n            LoginService.logUser(vm.user);\n            $state.go(\"queue\");\n        };\n\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('EVQueue')\n        .factory('QueueService', QueueService);\n\n\n    function QueueService($http, $log, $q,API) {\n\n        return {\n            getQueue: getQueue,\n            joinQueue:joinQueue,\n            getTestQueue:getTestQueue,\n            removeQueue:removeQueue\n        };\n\n        function getQueue() {\n            return $http.get(API + 'queue')\n                .then(getQueueSuccess)\n                ['catch'](getQueueFailed);\n\n            function getQueueSuccess(response) {\n                return response.data;\n            }\n\n            function getQueueFailed(error) {\n                $log.error('XHR Failed for getQueue.' + error.data);\n                return $q.reject(error);\n            }\n        }\n\n        function getTestQueue() {\n            return {\n                unplugged:[\n                    {\"username\":\"unplugged\",\"uuid\":\"21312\"},\n                    {\"username\":\"unplugged\",\"uuid\":\"12312\"}\n                ],\n                plugged:[\n                    {\"username\":\"plugged1\",\"uuid\":\"12312\"},\n                    {\"username\":\"plugged2\",\"uuid\":\"42142\"}\n                ]\n            };\n        }\n\n        function joinQueue(user) {\n            return $http.post(API+ 'queue',user)\n                .then(joinQueueSuccess)\n                ['catch'](joinQueueFailed);\n\n            function joinQueueSuccess(response) {\n                return response.data;\n            }\n\n            function joinQueueFailed(error) {\n                $log.error('XHR Failed for getQueue.' + error.data);\n                return $q.reject(error);\n            }\n        }\n\n        function removeQueue(uid) {\n            return $http.delete(API+ 'queue/'+uid)\n                .then(removeQueueSuccess)\n                ['catch'](removeQueueFailed);\n\n            function removeQueueSuccess(response) {\n                return response.data;\n            }\n\n            function removeQueueFailed(error) {\n                $log.error('XHR Failed for getQueue.' + error.data);\n                return $q.reject(error);\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('EVQueue')\n        .controller('QueueController', MainController);\n\n    /** @ngInject */\n    function MainController($log,QueueService,$interval) {\n        $log.log(\"QueueController Init\");\n        var vm = this;\n        vm.user = null;\n        vm.isCollapsed = false;\n        vm.queue =  {\n            unplugged:[\n                {\"username\":\"unplugged\",\"uuid\":\"21312\"}\n            ],\n            plugged:[\n                {\"username\":\"plugged1\",\"uuid\":\"12312\"}\n            ]\n        };\n\n        vm.getQueue = function(){\n            QueueService.getQueue().then(function(data){\n                vm.queue = data;\n            });\n\n            //vm.queue = QueueService.getTestQueue();\n        };\n\n        vm.userIsQueued = false;\n\n        vm.joinQueue = function(){\n            vm.userIsQueued = true;\n            QueueService.joinQueue({\"username\":vm.user}).then(function(data){\n                vm.queue = data;\n            });\n        };\n\n\n        var chargingStates = [\n            \"fa-battery-empty\",\n            \"fa-battery-quarter\",\n            \"fa-battery-half\",\n            \"fa-battery-three-quarters\",\n            \"fa-battery-full\",\n            \"fa-battery-empty\",\n            \"fa-battery-empty\",\n            \"fa-battery-empty\"\n        ];\n        var currChargingIndex = 0;\n        vm.currentChargingClass = chargingStates[currChargingIndex];\n        $interval(function(){\n            if(currChargingIndex < chargingStates.length){\n                currChargingIndex++;\n            }else{\n                currChargingIndex = 0;\n            }\n            vm.currentChargingClass = chargingStates[currChargingIndex];\n        },1500);\n\n        vm.removeFromQueue = function(user){\n            QueueService.removeQueue(user.uuid).then(function(data){\n                vm.queue = data;\n            });\n        };\n\n        $interval(function(){\n            vm.getQueue();\n        },30000);\n\n        vm.getQueue();\n    }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('EVQueue')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('EVQueue')\n    .constant('AppName', 'EVQueue')\n    .constant('API', '/api/');\n\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('EVQueue')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider, $stateProvider,$urlRouterProvider) {\n        // Enable log\n        $logProvider.debugEnabled(true);\n\n        $urlRouterProvider.otherwise('/');\n\n        $stateProvider\n            .state('login', {\n                url: '/login',\n                templateUrl: 'app/login/login.html',\n                controller: 'LoginController',\n                controllerAs: 'vm'\n            })\n            .state('queue', {\n                url: '/',\n                templateUrl: 'app/queue/queue.html',\n                controller: 'QueueController',\n                controllerAs: 'vm'\n            });\n    }\n\n})();\n\nangular.module(\"EVQueue\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/login/login.html\",\"<div class=\\\"row marketing\\\"><form><div class=\\\"form-group\\\"><label for=\\\"username\\\">Username</label> <input type=\\\"text\\\" ng-model=\\\"vm.user\\\" id=\\\"username\\\" placeholder=\\\"username\\\"></div><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.logUser()\\\">Login</button></form></div>\");\n$templateCache.put(\"app/queue/queue.html\",\"<div class=\\\"queue-view\\\"><div class=\\\"head-container\\\"><div class=\\\"container\\\"><div class=\\\"header\\\">EVQueue</div><div class=\\\"subhead\\\">Financial Engines</div><p>Simple utility app to keep track of the EV Cars queue. Go ahead and set your username and join the queue from your computer / phone whenever.</p><input placeholder=\\\"Username\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"usr\\\" ng-model=\\\"vm.user\\\"> <button ng-disabled=\\\"vm.userIsQueued\\\" type=\\\"button\\\" class=\\\"btn btn-head\\\" ng-click=\\\"vm.joinQueue()\\\">Join Queue</button></div></div><div class=\\\"plugged row\\\"><div class=\\\"cols\\\" ng-repeat=\\\"p in vm.queue.plugged.slice().reverse() | limitTo: 4\\\"><span class=\\\"charging\\\"><i class=\\\"fa fa-battery-empty\\\" ng-class=\\\"vm.currentChargingClass\\\"></i></span> <span class=\\\"charging-text\\\" ng-bind=\\\"p.username\\\"></span></div></div><div class=\\\"row item\\\" ng-repeat=\\\"q in vm.queue.unplugged\\\" ng-click=\\\"vm.removeFromQueue(q)\\\"><div class=\\\"battery\\\"><i class=\\\"fa fa-battery-empty\\\"></i></div><div ng-bind=\\\"q.username\\\"></div><div class=\\\"close-btn\\\"><i class=\\\"fa fa-times-circle\\\"></i></div></div></div>\");}]);"],"sourceRoot":"/source/"}